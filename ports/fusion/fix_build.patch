diff --git a/CMakeLists.txt b/CMakeLists.txt
index 55031ca..f0fd4e4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,95 @@
 cmake_minimum_required(VERSION 3.15)
-project(Fusion)
+
+set(fusion_VERSION 1.2.7)
+project(Fusion
+    VERSION ${fusion_VERSION}
+    DESCRIPTION "Fusion is a sensor fusion library for Inertial Measurement Units (IMUs), optimised for embedded systems."
+    HOMEPAGE_URL "https://github.com/xioTechnologies/Fusion"
+    LANGUAGES C
+)
+
+# Setup compiler settings
+set(CMAKE_C_STANDARD 17)
+set(CMAKE_C_STANDARD_REQUIRED ON)
+set(CMAKE_C_EXTENSIONS ON)
+
+# Core project settings
+message("Build type: " ${CMAKE_BUILD_TYPE})
+
+# if you haven't included it already
+# definitions of CMAKE_INSTALL_LIBDIR, CMAKE_INSTALL_INCLUDEDIR and others
+include(GNUInstallDirs)
+
+# check if in the top-level project
+if (NOT CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
+    message(STATUS "This project has a top-level one called [${CMAKE_PROJECT_NAME}]")
+else()
+    message(STATUS "This project is a top-level one")
+endif()
 
 add_subdirectory("Fusion")
-add_subdirectory("Examples/Advanced")
-add_subdirectory("Examples/Simple")
-if(CMAKE_BUILD_TYPE STREQUAL "Debug")
-    add_subdirectory("Python/Python-C-API") # do not include when run by CI
+
+# note that it is not CMAKE_INSTALL_PREFIX we are checking here
+if(DEFINED CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
+    message(
+        STATUS
+        "CMAKE_INSTALL_PREFIX is not set\n"
+        "Default value: ${CMAKE_INSTALL_PREFIX}\n"
+        "Will set it to ${CMAKE_SOURCE_DIR}/install"
+    )
+    set(CMAKE_INSTALL_PREFIX
+        "${CMAKE_SOURCE_DIR}/install"
+        CACHE PATH "Where the library will be installed to" FORCE
+    )
+else()
+    message(
+        STATUS
+        "CMAKE_INSTALL_PREFIX was already set\n"
+        "Current value: ${CMAKE_INSTALL_PREFIX}"
+    )
 endif()
+
+target_include_directories(fusion PUBLIC
+        $<INSTALL_INTERFACE:include/fusion>  # <prefix>/include/mylib
+)
+
+# install the target and create export-set
+install(TARGETS fusion
+    EXPORT "${PROJECT_NAME}Targets"
+    # these get default values from GNUInstallDirs, no need to set them
+    #RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} # bin
+    #LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} # lib
+    #ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} # lib
+    # except for public headers, as we want them to be inside a library folder
+    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME} # include/SomeLibrary
+    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} # include
+)
+
+# generate and install export file
+install(EXPORT "${PROJECT_NAME}Targets"
+    FILE "${PROJECT_NAME}Targets.cmake"
+    NAMESPACE xioTechnologies::
+    DESTINATION cmake
+)
+
+include(CMakePackageConfigHelpers)
+
+# generate the version file for the config file
+write_basic_package_version_file(
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    VERSION "${version}"
+    COMPATIBILITY AnyNewerVersion
+)
+
+# create config file
+configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    INSTALL_DESTINATION cmake
+)
+
+# install config files
+install(FILES
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    DESTINATION cmake
+)
diff --git a/Fusion/CMakeLists.txt b/Fusion/CMakeLists.txt
index 1c2836b..7c51e31 100644
--- a/Fusion/CMakeLists.txt
+++ b/Fusion/CMakeLists.txt
@@ -1,6 +1,21 @@
 file(GLOB_RECURSE files "*.c")
 
-add_library(Fusion ${files})
+add_library(fusion ${files})
+
+# without it public headers won't get installed
+set(fusion_public_headers
+    "${CMAKE_CURRENT_SOURCE_DIR}/Fusion.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionAhrs.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionAxes.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionCalibration.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionCompass.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionConvention.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionMath.h"
+    "${CMAKE_CURRENT_SOURCE_DIR}/FusionOffset.h"
+)
+
+# note that ${public_headers} has to be in quotes
+set_target_properties(fusion PROPERTIES PUBLIC_HEADER "${fusion_public_headers}")
 
 if(UNIX AND NOT APPLE)
     target_link_libraries(Fusion m) # link math library for Linux
